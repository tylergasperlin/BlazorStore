<div style="background-color:lightgreen">
    <h3> Los Child Component </h3>
    <h5 style="color:red"> @Title </h5>
    <GrandChildComponent />
    <h1>@Message</h1>
    <button @onclick="@ClickAction"> Click action </button>
    <p> @methodText </p>
    <div>
        @SectionContentFromChild
        <br />
        <br />
        <br />
        <br />
        <br />
        <br />
        
        @SectionContentFromChild2

    </div>
</div>

@code {
    [Parameter]
    public string Title { get; set; }

    [CascadingParameter(Name = "message")]
    public string Message { get; set; }

    [Parameter]
    public EventCallback<string> OnClickCallback { get; set; }

    private void ClickAction()
    {
        OnClickCallback.InvokeAsync("Sending data from child");
    }

    string methodText = "default method text";
    public void Show()
    {
        methodText = "Show method called";
        // Notify child component that state changed and needs to rerender
        StateHasChanged();
    }

    [Parameter]
    // Segment of UI content = renderfragment
    // Note that the parent component wraps contents in <SectionContent/>
    public RenderFragment SectionContentFromChild { get; set; }

    [Parameter]
    public RenderFragment SectionContentFromChild2 { get; set; }


}